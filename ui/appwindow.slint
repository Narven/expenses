import { Button, VerticalBox , LineEdit} from "std-widgets.slint";

export component AppWindow inherits Window {
    in property <string> results: "";
    in-out property <bool> open_curtain;
    callback divide-income(string);

    background: #f2f3f7;

    GridLayout {
        padding: 50px;
        spacing: 20px;

        Row {
            Text {
                text: "Enter total income";
                horizontal-alignment: center;
                font-size: 24px;
                font-weight: 900;
            }
        }

        Row {
            income := LineEdit {
                font-size: 16px;
                placeholder-text: "Enter your number";
                height: 35px;
            }
        }
        Row {
            Button {
                text: "Calculate";
                primary: true;
                height: 35px;
                clicked => {
                    root.open-curtain = !root.open-curtain;
                    divide-income(income.text)
                }
            }
        }

        Row {
            VerticalBox {
                Rectangle {
                    height: 100px;
                    background: #f2f2f2;

                    Text {
                        color: black;
                        font-size: 16px;
                        font-weight: 500;
                        text: root.results;
                    }

                    Rectangle {
                        background: #333;
                        x: 0;
                        width: open-curtain ? 0px : parent.width / 2;
                        height: parent.height;
                        animate width {
                            duration: 250ms; easing: ease-in;
                        }
                    }

                    Rectangle {
                        background: #333;
                        x: open-curtain ? parent.width : parent.width / 2;
                        width: open-curtain ? 0px : parent.width / 2;
                        height: parent.height;
                        animate width {
                            duration: 250ms; easing: ease-in;
                        }
                        animate x {
                            duration: 250ms; easing: ease-in;
                        }
                    }
                }
            }
        }
    }
}
